{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const API_KEY = '36831131-bfb1c5890fc73f15a7de29d05';\n\nexport async function fetchImages(query) {\n    const url = `https://pixabay.com/api/?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n        throw new Error('Failed to fetch images');\n    }\n\n    const data = await response.json();\n    return data.hits;\n}\n","import iziToast from \"izitoast\";\n\nexport function renderGallery(images) {\n    const galleryElement = document.getElementById('gallery');\n    galleryElement.innerHTML = '';\n\n    images.forEach(image => {\n        const imageElement = document.createElement('img');\n        imageElement.src = image.webformatURL;\n        imageElement.alt = image.tags;\n        galleryElement.appendChild(imageElement);\n        const imageComments = document.createElement('div');\n        imageComments.innerHTML = image.comments;\n        imageElement.appendChild(imageComments)\n    });\n}\n\nexport function showErrorMessage(message) {\n    iziToast.error({\n        title: 'Error',\n        message: message,\n        position: 'topRight'\n    });\n}\n\n\nexport const createGalleryItemMarkup = images => {\n    return images\n        .map(({ preview, original, description }) =>\n            `\n<li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${original}\">\n    <img class=\"gallery-image\" src=\"${preview}\" alt=\"${description}\" />\n  </a>\n</li>\n`\n        ).join(\"\");\n    gallery.innerHTML = markup;\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery, showErrorMessage } from './js/render-functions.js';\n\nconst searchForm = document.getElementById('search-form');\nconst searchInput = document.getElementById('search-input');\n\n\nsearchForm.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    const searchTerm = searchInput.value.trim();\n    if (!searchTerm) {\n        showErrorMessage('Sorry, there are no images matching your search query. Please try again!');\n        return;\n    }\n\n    try {\n        const images = await fetchImages(searchTerm);\n        console.log(images)\n        renderGallery(images);\n    } catch (error) {\n        showErrorMessage('Failed to fetch images. Please try again.');\n    }\n});\n\n\n"],"names":["API_KEY","fetchImages","query","url","response","renderGallery","images","galleryElement","image","imageElement","imageComments","showErrorMessage","message","iziToast","searchForm","searchInput","event","searchTerm"],"mappings":"svBAAA,MAAMA,EAAU,qCAET,eAAeC,EAAYC,EAAO,CACrC,MAAMC,EAAM,gCAAgCH,CAAO,MAAME,CAAK,2DACxDE,EAAW,MAAM,MAAMD,CAAG,EAEhC,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,wBAAwB,EAI5C,OADa,MAAMA,EAAS,QAChB,IAChB,CCVO,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAAiB,SAAS,eAAe,SAAS,EACxDA,EAAe,UAAY,GAE3BD,EAAO,QAAQE,GAAS,CACpB,MAAMC,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,IAAMD,EAAM,aACzBC,EAAa,IAAMD,EAAM,KACzBD,EAAe,YAAYE,CAAY,EACvC,MAAMC,EAAgB,SAAS,cAAc,KAAK,EAClDA,EAAc,UAAYF,EAAM,SAChCC,EAAa,YAAYC,CAAa,CAC9C,CAAK,CACL,CAEO,SAASC,EAAiBC,EAAS,CACtCC,EAAS,MAAM,CACX,MAAO,QACP,QAASD,EACT,SAAU,UAClB,CAAK,CACL,CCpBA,MAAME,EAAa,SAAS,eAAe,aAAa,EAClDC,EAAc,SAAS,eAAe,cAAc,EAG1DD,EAAW,iBAAiB,SAAU,MAAOE,GAAU,CACnDA,EAAM,eAAc,EAEpB,MAAMC,EAAaF,EAAY,MAAM,KAAI,EACzC,GAAI,CAACE,EAAY,CACbN,EAAiB,0EAA0E,EAC3F,MACH,CAED,GAAI,CACA,MAAML,EAAS,MAAML,EAAYgB,CAAU,EAC3C,QAAQ,IAAIX,CAAM,EAClBD,EAAcC,CAAM,CACvB,MAAe,CACZK,EAAiB,2CAA2C,CAC/D,CACL,CAAC"}